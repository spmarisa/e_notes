mix phoenix.gen.html User users name:string email:string bio:string number_of_pets:integer

mix ecto.gen.migration add_author_to_post

mix ecto.migrate
mix ecto.rollback


mix ecto.migrate


iex -S mix phoenix.server


changeset = User.changeset(%User{}, %{})

changeset.valid?

changeset.errors





params = %{name: "Joe Example", email: "joe@example.com", bio: "An example to all", number_of_pets: 5, random_key: "random value"}

changeset = User.changeset(%User{}, params)

changeset.valid?

changeset.changes




|> validate_length(:bio, min: 2)
|> validate_length(:bio, max: 4)

|> validate_format(:email, ~r/@/)






mix phoenix.gen.model Video videos name:string approved_at:datetime description:text likes:integer views:integer user_id:references:users



mix do deps.get, compile

mix ecto.gen.repo



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Ecto also has a feature called changesets that holds all changes you want to perform on the database



alias Rumbl.Repo
alias Rumbl.User

Repo.insert(%User{ name: "Jos√©", username: "josevalim", password_hash: "<3<3elixir" })

Repo.insert(%User{ name: "Chris", username: "cmc cord", password_hash: "phoenix" })

Repo.all(User)

Repo.get(User, 1)





changeset = Rumbl.User.changeset(%Rumbl.User{username: "eric"})

import Ecto.Changeset

changeset = put_change(changeset, :username, "ericmj")

changeset.changes

get_change(changeset, :username)
