“Elixir is a dynamic, functional language designed for building scalable and maintainable applications.” — elixir-lang.org

Elixir leverages the battle tested Erlang VM (BEAM) to build distributed and fault-tolerant systems with low-latency out of the box.

Features:

          Scalable
          Fault-tolerant
          Functional Programming
          Extensible


          #two types of files -> .ex - get compiled to bytecode and written to disk in a beam file
                              -> .exs - for scripting, will stay in memory when run


#defmodule is not a keyword, its a macro
#elixirs ability to metaprogram with macros
#elixir is able to do what it does is because of its macros

The Elixir programming language wraps functional programming with
immutable state and an actor-based approach to concurrency in a tidy,
modern syntax. And it runs on the industrial-strength, high-performance,
distributed Erlang VM. But what does all that mean?
